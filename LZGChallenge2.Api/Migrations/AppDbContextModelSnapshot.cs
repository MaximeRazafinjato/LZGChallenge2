// <auto-generated />
using System;
using LZGChallenge2.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LZGChallenge2.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LZGChallenge2.Api.Models.ChampionStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageCreepScore")
                        .HasColumnType("float");

                    b.Property<double>("AverageDamageDealt")
                        .HasColumnType("float");

                    b.Property<double>("AverageGameDuration")
                        .HasColumnType("float");

                    b.Property<double>("AverageVisionScore")
                        .HasColumnType("float");

                    b.Property<int>("ChampionId")
                        .HasColumnType("int");

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastPlayedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAssists")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeaths")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalKills")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId", "ChampionId")
                        .IsUnique();

                    b.ToTable("ChampionStats");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("ChampionId")
                        .HasColumnType("int");

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreepScore")
                        .HasColumnType("int");

                    b.Property<int>("Deaths")
                        .HasColumnType("int");

                    b.Property<long>("GameDuration")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GameEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GameStartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("GoldEarned")
                        .HasColumnType("bigint");

                    b.Property<int>("Kills")
                        .HasColumnType("int");

                    b.Property<int?>("LeaguePoints")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("LpChange")
                        .HasColumnType("int");

                    b.Property<string>("MatchId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("QueueId")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<string>("Tier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TotalDamageDealtToChampions")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalDamageTaken")
                        .HasColumnType("bigint");

                    b.Property<int>("VisionScore")
                        .HasColumnType("int");

                    b.Property<bool>("Win")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GameStartTime");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId", "MatchId")
                        .IsUnique();

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Puuid")
                        .IsRequired()
                        .HasMaxLength(78)
                        .HasColumnType("nvarchar(78)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RiotId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SummonerId")
                        .IsRequired()
                        .HasMaxLength(78)
                        .HasColumnType("nvarchar(78)");

                    b.Property<string>("TagLine")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Puuid")
                        .IsUnique();

                    b.HasIndex("SummonerId")
                        .IsUnique();

                    b.HasIndex("GameName", "TagLine")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.PlayerStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageCreepScore")
                        .HasColumnType("float");

                    b.Property<double>("AverageDamageDealt")
                        .HasColumnType("float");

                    b.Property<double>("AverageGameDuration")
                        .HasColumnType("float");

                    b.Property<double>("AverageVisionScore")
                        .HasColumnType("float");

                    b.Property<int>("CurrentLeaguePoints")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLoseStreak")
                        .HasColumnType("int");

                    b.Property<string>("CurrentRank")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CurrentTier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CurrentWinStreak")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("LongestLoseStreak")
                        .HasColumnType("int");

                    b.Property<int>("LongestWinStreak")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAssists")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeaths")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalGames")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalKills")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalLosses")
                        .HasColumnType("int");

                    b.Property<int>("TotalLpGained")
                        .HasColumnType("int");

                    b.Property<int>("TotalLpLost")
                        .HasColumnType("int");

                    b.Property<int>("TotalWins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("PlayerStats");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.RoleStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageCreepScore")
                        .HasColumnType("float");

                    b.Property<double>("AverageDamageDealt")
                        .HasColumnType("float");

                    b.Property<double>("AverageVisionScore")
                        .HasColumnType("float");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<double>("PlayRate")
                        .HasColumnType("float");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAssists")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeaths")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalKills")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId", "Position")
                        .IsUnique();

                    b.ToTable("RoleStats");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.ChampionStats", b =>
                {
                    b.HasOne("LZGChallenge2.Api.Models.Player", "Player")
                        .WithMany("ChampionStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.Match", b =>
                {
                    b.HasOne("LZGChallenge2.Api.Models.Player", "Player")
                        .WithMany("Matches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.PlayerStats", b =>
                {
                    b.HasOne("LZGChallenge2.Api.Models.Player", "Player")
                        .WithOne("CurrentStats")
                        .HasForeignKey("LZGChallenge2.Api.Models.PlayerStats", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.RoleStats", b =>
                {
                    b.HasOne("LZGChallenge2.Api.Models.Player", "Player")
                        .WithMany("RoleStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("LZGChallenge2.Api.Models.Player", b =>
                {
                    b.Navigation("ChampionStats");

                    b.Navigation("CurrentStats");

                    b.Navigation("Matches");

                    b.Navigation("RoleStats");
                });
#pragma warning restore 612, 618
        }
    }
}
